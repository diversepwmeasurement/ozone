env:
  FAIL_FAST: ${{ github.event_name == 'pull_request' }}
  MAVEN_OPTS: -Dhttp.keepAlive=false -Dmaven.wagon.http.pool=false -Dmaven.wagon.http.retryHandler.class=standard
    -Dmaven.wagon.http.retryHandler.count=3
  OZONE_WITH_COVERAGE: ${{ github.repository == 'apache/ozone' && github.event_name
    != 'pull_request' }}
jobs:
  acceptance:
    if: needs.build-info.outputs.needs-compose-tests == 'true'
    needs:
    - build-info
    - build
    - basic
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: Checkout project
      uses: actions/checkout@v4
    - continue-on-error: true
      name: Download compiled Ozone binaries
      uses: actions/download-artifact@v4
      with:
        name: ozone-bin
    - continue-on-error: true
      name: Untar binaries
      run: 'mkdir -p hadoop-ozone/dist/target

        tar xzvf ozone*.tar.gz -C hadoop-ozone/dist/target

        rm ozone*.tar.gz

        sudo chmod -R a+rwX hadoop-ozone/dist/target

        '
    - continue-on-error: true
      env:
        KEEP_IMAGE: false
        OZONE_ACCEPTANCE_SUITE: ${{ matrix.suite }}
        OZONE_VOLUME_OWNER: 1000
      name: Execute tests
      run: 'pushd hadoop-ozone/dist/target/ozone-*

        sudo mkdir .aws && sudo chmod 777 .aws && sudo chown 1000 .aws

        popd

        ./hadoop-ozone/dev-support/checks/acceptance.sh

        '
    - continue-on-error: true
      if: ${{ !cancelled() }}
      name: Summary of failures
      run: hadoop-ozone/dev-support/checks/_summary.sh target/${{ github.job }}/summary.txt
    - continue-on-error: true
      if: always()
      name: Archive build results
      uses: actions/upload-artifact@v4
      with:
        name: acceptance-${{ matrix.suite }}
        path: target/acceptance
    strategy:
      fail-fast: false
      matrix:
        suite: ${{ fromJson(needs.build-info.outputs.acceptance-suites) }}
    timeout-minutes: 150
  basic:
    if: needs.build-info.outputs.needs-basic-check == 'true'
    needs:
    - build-info
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      if: matrix.check != 'bats'
      name: Checkout project
      uses: actions/checkout@v4
    - continue-on-error: true
      if: matrix.check == 'bats'
      name: Checkout project with history
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - continue-on-error: true
      if: ${{ !contains('author,bats,docs', matrix.check) }}
      name: Cache for maven dependencies
      uses: actions/cache/restore@v4
      with:
        key: maven-repo-${{ hashFiles('**/pom.xml') }}
        path: '~/.m2/repository/*/*/*

          !~/.m2/repository/org/apache/ozone

          '
        restore-keys: 'maven-repo-

          '
    - continue-on-error: true
      name: Setup java
      uses: actions/setup-java@v4
      with:
        distribution: temurin
        java-version: 8
    - continue-on-error: true
      env:
        GRADLE_ENTERPRISE_ACCESS_KEY: ${{ secrets.GE_ACCESS_TOKEN }}
      name: Execute tests
      run: hadoop-ozone/dev-support/checks/${{ matrix.check }}.sh
    - continue-on-error: true
      if: ${{ !cancelled() }}
      name: Summary of failures
      run: hadoop-ozone/dev-support/checks/_summary.sh target/${{ matrix.check }}/summary.txt
    - continue-on-error: true
      if: ${{ !cancelled() }}
      name: Archive build results
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.check }}
        path: target/${{ matrix.check }}
    strategy:
      fail-fast: false
      matrix:
        check: ${{ fromJson(needs.build-info.outputs.basic-checks) }}
    timeout-minutes: 30
  build:
    if: needs.build-info.outputs.needs-build == 'true'
    needs:
    - build-info
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: Checkout project
      uses: actions/checkout@v4
    - continue-on-error: true
      name: Cache for npm dependencies
      uses: actions/cache@v4
      with:
        key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
        path: '~/.pnpm-store

          **/node_modules

          '
        restore-keys: '${{ runner.os }}-pnpm-

          '
    - continue-on-error: true
      name: Cache for maven dependencies
      uses: actions/cache/restore@v4
      with:
        key: maven-repo-${{ hashFiles('**/pom.xml') }}
        path: '~/.m2/repository/*/*/*

          !~/.m2/repository/org/apache/ozone

          '
        restore-keys: 'maven-repo-

          '
    - continue-on-error: true
      name: Setup java
      uses: actions/setup-java@v4
      with:
        distribution: temurin
        java-version: ${{ matrix.java }}
    - continue-on-error: true
      env:
        GRADLE_ENTERPRISE_ACCESS_KEY: ${{ secrets.GE_ACCESS_TOKEN }}
      name: Run a full build
      run: hadoop-ozone/dev-support/checks/build.sh -Pdist -Psrc
    - continue-on-error: true
      name: Store binaries for tests
      uses: actions/upload-artifact@v4
      with:
        name: ozone-bin
        path: 'hadoop-ozone/dist/target/ozone-*.tar.gz

          !hadoop-ozone/dist/target/ozone-*-src.tar.gz

          '
        retention-days: 1
    - continue-on-error: true
      name: Store source tarball for compilation
      uses: actions/upload-artifact@v4
      with:
        name: ozone-src
        path: hadoop-ozone/dist/target/ozone-*-src.tar.gz
        retention-days: 1
    - continue-on-error: true
      name: Store Maven repo for tests
      uses: actions/upload-artifact@v4
      with:
        name: ozone-repo
        path: '~/.m2/repository/org/apache/ozone

          '
        retention-days: 1
    strategy:
      fail-fast: false
      matrix:
        java:
        - 8
    timeout-minutes: 60
  build-info:
    env:
      GITHUB_CONTEXT: ${{ toJson(github) }}
    outputs:
      acceptance-suites: ${{ steps.acceptance-suites.outputs.suites }}
      basic-checks: ${{ steps.categorize-basic-checks.outputs.basic-checks }}
      needs-basic-check: ${{ steps.categorize-basic-checks.outputs.needs-basic-check
        }}
      needs-build: ${{ steps.selective-checks.outputs.needs-build }}
      needs-compile: ${{ steps.selective-checks.outputs.needs-compile }}
      needs-compose-tests: ${{ steps.selective-checks.outputs.needs-compose-tests
        }}
      needs-dependency-check: ${{ steps.selective-checks.outputs.needs-dependency-check
        }}
      needs-integration-tests: ${{ steps.selective-checks.outputs.needs-integration-tests
        }}
      needs-kubernetes-tests: ${{ steps.selective-checks.outputs.needs-kubernetes-tests
        }}
      needs-unit-check: ${{ steps.categorize-basic-checks.outputs.needs-unit-check
        }}
      unit-checks: ${{ steps.categorize-basic-checks.outputs.unit-checks }}
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: Checkout ${{ github.ref }} ( ${{ github.sha }} )
      uses: actions/checkout@v4
      with:
        persist-credentials: false
    - continue-on-error: true
      if: github.event_name  == 'pull_request'
      name: Fetch incoming commit ${{ github.sha }} with its parent
      uses: actions/checkout@v4
      with:
        fetch-depth: 2
        persist-credentials: false
        ref: ${{ github.sha }}
    - continue-on-error: true
      env:
        PR_DRAFT: ${{ github.event.pull_request.draft }}
        PR_LABELS: ${{ toJSON(github.event.pull_request.labels.*.name) }}
      id: selective-checks
      name: Selective checks
      run: "if [[ \"${GITHUB_EVENT_NAME}\" == \"pull_request\" ]]; then\n  # Run selective\
        \ checks\n  dev-support/ci/selective_ci_checks.sh \"${GITHUB_SHA}\"\nelse\n\
        \  # Run all checks\n  dev-support/ci/selective_ci_checks.sh\nfi\n"
    - continue-on-error: true
      id: acceptance-suites
      name: Acceptance suites
      run: dev-support/ci/acceptance_suites.sh
    - continue-on-error: true
      env:
        ALL_BASIC_CHECKS: ${{ steps.selective-checks.outputs.basic-checks }}
      id: categorize-basic-checks
      name: Categorize Basic Checks
      run: dev-support/ci/categorize_basic_checks.sh
  compile:
    if: needs.build-info.outputs.needs-compile == 'true'
    needs:
    - build-info
    - build
    - basic
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: Download Ozone source tarball
      uses: actions/download-artifact@v4
      with:
        name: ozone-src
    - continue-on-error: true
      name: Untar sources
      run: 'tar --strip-components 1 -xzvf ozone*-src.tar.gz

        '
    - continue-on-error: true
      name: Workaround for HADOOP-19011
      run: 'git init

        git config user.name ''Github Actions''

        git config user.email ''noreply@github.com''

        git commit --allow-empty -a -m ''workaround for HADOOP-19011''

        '
    - continue-on-error: true
      name: Cache for maven dependencies
      uses: actions/cache/restore@v4
      with:
        key: maven-repo-${{ hashFiles('**/pom.xml') }}
        path: '~/.m2/repository/*/*/*

          !~/.m2/repository/org/apache/ozone

          '
        restore-keys: 'maven-repo-

          '
    - continue-on-error: true
      name: Setup java
      uses: actions/setup-java@v4
      with:
        distribution: temurin
        java-version: ${{ matrix.java }}
    - continue-on-error: true
      env:
        GRADLE_ENTERPRISE_ACCESS_KEY: ${{ secrets.GE_ACCESS_TOKEN }}
        OZONE_WITH_COVERAGE: false
      name: Compile Ozone using Java ${{ matrix.java }}
      run: hadoop-ozone/dev-support/checks/build.sh -Dskip.npx -Dskip.installnpx -Djavac.version=${{
        matrix.java }}
    strategy:
      fail-fast: false
      matrix:
        include:
        - os: ubuntu-20.04
        - java: 8
          os: macos-12
        java:
        - 11
        - 17
        - 21
    timeout-minutes: 45
  coverage:
    if: github.repository == 'apache/ozone' && github.event_name != 'pull_request'
    needs:
    - unit
    - acceptance
    - integration
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: Checkout project
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - continue-on-error: true
      name: Cache for maven dependencies
      uses: actions/cache/restore@v4
      with:
        key: maven-repo-${{ hashFiles('**/pom.xml') }}
        path: '~/.m2/repository/*/*/*

          !~/.m2/repository/org/apache/ozone

          '
        restore-keys: 'maven-repo-

          '
    - continue-on-error: true
      name: Download artifacts
      uses: actions/download-artifact@v4
      with:
        path: target/artifacts
    - continue-on-error: true
      name: Untar binaries
      run: 'mkdir -p hadoop-ozone/dist/target

        tar xzvf target/artifacts/ozone-bin/ozone*.tar.gz -C hadoop-ozone/dist/target

        '
    - continue-on-error: true
      name: Calculate combined coverage
      run: ./hadoop-ozone/dev-support/checks/coverage.sh
    - continue-on-error: true
      name: Setup java 17
      uses: actions/setup-java@v4
      with:
        distribution: temurin
        java-version: 17
    - continue-on-error: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        GRADLE_ENTERPRISE_ACCESS_KEY: ${{ secrets.GE_ACCESS_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONARCLOUD_TOKEN }}
      name: Upload coverage to Sonar
      run: ./hadoop-ozone/dev-support/checks/sonar.sh
    - continue-on-error: true
      name: Archive build results
      uses: actions/upload-artifact@v4
      with:
        name: coverage
        path: target/coverage
    timeout-minutes: 30
  dependency:
    if: needs.build-info.outputs.needs-dependency-check == 'true'
    needs:
    - build-info
    - build
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: Checkout project
      uses: actions/checkout@v4
    - continue-on-error: true
      name: Download compiled Ozone binaries
      uses: actions/download-artifact@v4
      with:
        name: ozone-bin
    - continue-on-error: true
      name: Untar binaries
      run: 'mkdir dist

        tar  -C dist --strip-components 1 -xzf ozone*.tar.gz

        '
    - continue-on-error: true
      name: Execute tests
      run: 'export OZONE_DIST_DIR=`pwd`/dist

        ./hadoop-ozone/dev-support/checks/dependency.sh

        '
    - continue-on-error: true
      if: always()
      name: Archive build results
      uses: actions/upload-artifact@v4
      with:
        name: dependency
        path: target/dependency
    timeout-minutes: 5
  integration:
    if: needs.build-info.outputs.needs-integration-tests == 'true'
    needs:
    - build-info
    - build
    - basic
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: Checkout project
      uses: actions/checkout@v4
    - continue-on-error: true
      name: Cache for maven dependencies
      uses: actions/cache/restore@v4
      with:
        key: maven-repo-${{ hashFiles('**/pom.xml') }}
        path: '~/.m2/repository/*/*/*

          !~/.m2/repository/org/apache/ozone

          '
        restore-keys: 'maven-repo-

          '
    - continue-on-error: true
      id: download-ozone-repo
      name: Download Ozone repo
      uses: actions/download-artifact@v4
      with:
        name: ozone-repo
        path: '~/.m2/repository/org/apache/ozone

          '
    - continue-on-error: true
      name: Setup java
      uses: actions/setup-java@v4
      with:
        distribution: temurin
        java-version: 8
    - continue-on-error: true
      env:
        GRADLE_ENTERPRISE_ACCESS_KEY: ${{ secrets.GE_ACCESS_TOKEN }}
      name: Execute tests
      run: "if [[ -e \"${{ steps.download-ozone-repo.outputs.download-path }}\" ]];\
        \ then\n  export OZONE_REPO_CACHED=true\nfi\n\nargs=\nif [[ \"${{ matrix.profile\
        \ }}\" == \"flaky\" ]]; then\n  args=\"-Dsurefire.rerunFailingTestsCount=5\
        \ -Dsurefire.fork.timeout=3600\"\nfi\n\nhadoop-ozone/dev-support/checks/integration.sh\
        \ -P${{ matrix.profile }} ${args}\n"
    - continue-on-error: true
      if: ${{ !cancelled() }}
      name: Summary of failures
      run: hadoop-ozone/dev-support/checks/_summary.sh target/${{ github.job }}/summary.txt
    - continue-on-error: true
      if: always()
      name: Archive build results
      uses: actions/upload-artifact@v4
      with:
        name: it-${{ matrix.profile }}
        path: target/integration
    strategy:
      fail-fast: false
      matrix:
        profile:
        - client
        - contract
        - filesystem
        - hdds
        - om
        - ozone
        - shell
        - flaky
    timeout-minutes: 150
  kubernetes:
    if: needs.build-info.outputs.needs-kubernetes-tests == 'true'
    needs:
    - build-info
    - build
    - basic
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: Checkout project
      uses: actions/checkout@v4
    - continue-on-error: true
      name: Download compiled Ozone binaries
      uses: actions/download-artifact@v4
      with:
        name: ozone-bin
    - continue-on-error: true
      name: Untar binaries
      run: 'mkdir -p hadoop-ozone/dist/target

        tar xzvf ozone*.tar.gz -C hadoop-ozone/dist/target

        '
    - continue-on-error: true
      name: Execute tests
      run: 'pushd hadoop-ozone/dist/target/ozone-*

        sudo mkdir .aws && sudo chmod 777 .aws && sudo chown 1000 .aws

        popd

        ./hadoop-ozone/dev-support/checks/kubernetes.sh

        '
    - continue-on-error: true
      if: ${{ !cancelled() }}
      name: Summary of failures
      run: hadoop-ozone/dev-support/checks/_summary.sh target/${{ github.job }}/summary.txt
    - continue-on-error: true
      if: always()
      name: Archive build results
      uses: actions/upload-artifact@v4
      with:
        name: kubernetes
        path: target/kubernetes
    timeout-minutes: 60
  license:
    if: needs.build-info.outputs.needs-dependency-check == 'true'
    needs:
    - build-info
    - build
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: Checkout project
      uses: actions/checkout@v4
    - continue-on-error: true
      name: Cache for maven dependencies
      uses: actions/cache/restore@v4
      with:
        key: maven-repo-${{ hashFiles('**/pom.xml') }}
        path: '~/.m2/repository/*/*/*

          !~/.m2/repository/org/apache/ozone

          '
        restore-keys: 'maven-repo-

          '
    - continue-on-error: true
      id: download-ozone-repo
      name: Download Ozone repo
      uses: actions/download-artifact@v4
      with:
        name: ozone-repo
        path: '~/.m2/repository/org/apache/ozone

          '
    - continue-on-error: true
      name: Execute tests
      run: 'hadoop-ozone/dev-support/checks/${{ github.job }}.sh

        '
    - continue-on-error: true
      if: ${{ !cancelled() }}
      name: Summary of failures
      run: hadoop-ozone/dev-support/checks/_summary.sh target/${{ github.job }}/summary.txt
    - continue-on-error: true
      if: always()
      name: Archive build results
      uses: actions/upload-artifact@v4
      with:
        name: ${{ github.job }}
        path: target/${{ github.job }}
    timeout-minutes: 15
  unit:
    if: needs.build-info.outputs.needs-unit-check == 'true'
    needs:
    - build-info
    - basic
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: Checkout project
      uses: actions/checkout@v4
    - continue-on-error: true
      name: Cache for maven dependencies
      uses: actions/cache/restore@v4
      with:
        key: maven-repo-${{ hashFiles('**/pom.xml') }}
        path: '~/.m2/repository/*/*/*

          !~/.m2/repository/org/apache/ozone

          '
        restore-keys: 'maven-repo-

          '
    - continue-on-error: true
      name: Setup java
      uses: actions/setup-java@v4
      with:
        distribution: temurin
        java-version: 8
    - continue-on-error: true
      env:
        GRADLE_ENTERPRISE_ACCESS_KEY: ${{ secrets.GE_ACCESS_TOKEN }}
      name: Execute tests
      run: hadoop-ozone/dev-support/checks/${{ matrix.check }}.sh
    - continue-on-error: true
      if: ${{ !cancelled() }}
      name: Summary of failures
      run: hadoop-ozone/dev-support/checks/_summary.sh target/${{ matrix.check }}/summary.txt
    - continue-on-error: true
      if: ${{ !cancelled() }}
      name: Archive build results
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.check }}
        path: target/${{ matrix.check }}
    strategy:
      fail-fast: false
      matrix:
        check: ${{ fromJson(needs.build-info.outputs.unit-checks) }}
    timeout-minutes: 150
name: full-ci
on:
  repository_dispatch:
    types: trigger-ga___ci.yml
