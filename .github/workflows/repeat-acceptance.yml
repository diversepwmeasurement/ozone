env:
  FAIL_FAST: ${{ github.event.inputs.fail-fast }}
  JAVA_VERSION: 8
  MAVEN_OPTS: -Dhttp.keepAlive=false -Dmaven.wagon.http.pool=false -Dmaven.wagon.http.retryHandler.class=standard
    -Dmaven.wagon.http.retryHandler.count=3
  OZONE_ACCEPTANCE_SUITE: ${{ github.event.inputs.test-suite}}
  OZONE_TEST_SELECTOR: ${{ github.event.inputs.test-filter }}
jobs:
  acceptance:
    name: Run-Split
    needs:
    - prepare-job
    - build
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v4
      with:
        ref: ${{ github.event.inputs.ref }}
    - continue-on-error: true
      name: Download compiled Ozone binaries
      uses: actions/download-artifact@v4
      with:
        name: ozone-bin
    - continue-on-error: true
      name: Untar binaries
      run: 'mkdir -p hadoop-ozone/dist/target

        tar xzvf ozone*.tar.gz -C hadoop-ozone/dist/target

        rm ozone*.tar.gz

        sudo chmod -R a+rwX hadoop-ozone/dist/target

        '
    - continue-on-error: true
      env:
        KEEP_IMAGE: false
        OZONE_VOLUME_OWNER: 1000
      name: Execute tests
      run: 'pushd hadoop-ozone/dist/target/ozone-*

        sudo mkdir .aws && sudo chmod 777 .aws && sudo chown 1000 .aws

        popd

        ./hadoop-ozone/dev-support/checks/acceptance.sh

        '
    - continue-on-error: true
      if: ${{ !cancelled() }}
      name: Summary of failures
      run: hadoop-ozone/dev-support/checks/_summary.sh target/${{ github.job }}/summary.txt
    - continue-on-error: true
      if: always()
      name: Archive build results
      uses: actions/upload-artifact@v4
      with:
        name: acceptance-${{ matrix.split }}
        path: target/acceptance
    strategy:
      fail-fast: ${{ fromJson(github.event.inputs.fail-fast) }}
      matrix:
        split: ${{ fromJson(needs.prepare-job.outputs.matrix) }}
  build:
    needs:
    - prepare-job
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: Checkout project
      uses: actions/checkout@v4
    - continue-on-error: true
      name: Cache for npm dependencies
      uses: actions/cache@v4
      with:
        key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
        path: '~/.pnpm-store

          **/node_modules

          '
        restore-keys: '${{ runner.os }}-pnpm-

          '
    - continue-on-error: true
      name: Cache for maven dependencies
      uses: actions/cache/restore@v4
      with:
        key: maven-repo-${{ hashFiles('**/pom.xml') }}-${{ env.JAVA_VERSION }}
        path: '~/.m2/repository/*/*/*

          !~/.m2/repository/org/apache/ozone

          '
        restore-keys: 'maven-repo-${{ hashFiles(''**/pom.xml'') }}

          maven-repo-

          '
    - continue-on-error: true
      name: Setup java
      uses: actions/setup-java@v4
      with:
        distribution: temurin
        java-version: ${{ env.JAVA_VERSION }}
    - continue-on-error: true
      env:
        GRADLE_ENTERPRISE_ACCESS_KEY: ${{ secrets.GE_ACCESS_TOKEN }}
      name: Run a full build
      run: hadoop-ozone/dev-support/checks/build.sh -Pdist -Psrc
    - continue-on-error: true
      name: Store binaries for tests
      uses: actions/upload-artifact@v4
      with:
        name: ozone-bin
        path: 'hadoop-ozone/dist/target/ozone-*.tar.gz

          !hadoop-ozone/dist/target/ozone-*-src.tar.gz

          '
        retention-days: 1
    timeout-minutes: 60
  prepare-job:
    outputs:
      matrix: ${{steps.generate.outputs.matrix}}
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v4
      with:
        ref: ${{ github.event.inputs.ref }}
    - continue-on-error: true
      name: Verify Test Filter
      run: 'cd hadoop-ozone/dist/src/main/compose

        source testlib.sh

        find_tests

        '
    - continue-on-error: true
      id: generate
      name: Generate test matrix
      run: "splits=()\nfor ((i = 1; i <= ${{ github.event.inputs.splits }}; i++));\
        \ do\n    splits+=(\"$i\")\ndone\nprintf -v x \"%s,\" \"${splits[@]}\"\nsplit_matrix=\"\
        [${x%,}]\"\necho \"matrix=$split_matrix\" >> $GITHUB_OUTPUT\n"
name: repeat-acceptance-test
on:
  repository_dispatch:
    types: trigger-ga___repeat-acceptance.yml
run-name: ${{ github.event_name == 'workflow_dispatch' && format('{0}[{1}]-{2}', inputs.test-suite
  || inputs.test-filter, inputs.ref, inputs.splits) || '' }}
